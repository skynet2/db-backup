on:
  push:
    branches:
      - master
      - mattermost

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      versionOut: ${{ steps.generateVersion.outputs.version }}
    steps:
      - id: generateVersion
        run: echo "version=$(date '+%Y.%m.%d.%H%M%S').${{ github.run_number }}" >> "$GITHUB_OUTPUT"

  publish-docker:
    strategy:
      matrix:
        pg_version: [ 14,15,16 ]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: db-backup
      DOCKER_IMAGE_VERSION: ${{needs.version.outputs.versionOut}}
    needs:
      - version
    steps:
      - uses: docker/setup-buildx-action@v3
      - run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - uses: actions/checkout@v4
      - run: docker build -t ghcr.io/${{ github.repository }}/${IMAGE_NAME}-pg${{ matrix.pg_version }}:${DOCKER_IMAGE_VERSION} --build-arg PG_VERSION=${{ matrix.pg_version }} -f ci/Dockerfile .
      - run: docker push ghcr.io/${{ github.repository }}/${IMAGE_NAME}-pg${{ matrix.pg_version }}:${DOCKER_IMAGE_VERSION}

  release:
    runs-on: ubuntu-latest
    container: golang:1.23-bullseye
    needs:
      - version
    steps:
      - uses: actions/checkout@v4
      - run: go mod vendor
      - run: cd cmd/db-backup && GOOS=linux GOARCH=amd64 go build -buildvcs=false -ldflags "-s -w" -o ../../dist/db-backup
      - run: cp config.yaml dist/
      - run: tar cf db-backup.tar dist/
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{needs.version.outputs.versionOut}}
          tag_name: ${{needs.version.outputs.versionOut}}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: db-backup.tar
          asset_name: db-backup.tar
          asset_content_type: application/octet-stream
